apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/INDEX.LIST'
    }

    defaultConfig {
        applicationId "com.warlock.tmdb"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    def keystorePropertiesFile = rootProject.file("app/keystore/keystore.properties")
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


    def keystorePropertiesReleaseFile = rootProject.file("app/keystore/keystorerelease.properties")
    def keystorePropertiesRelease = new Properties()
    keystorePropertiesRelease.load(new FileInputStream(keystorePropertiesReleaseFile))

    signingConfigs {
        debugConfig {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
        releaseConfig {
            keyAlias keystorePropertiesRelease['keyAlias']
            keyPassword keystorePropertiesRelease['keyPassword']
            storeFile file(keystorePropertiesRelease['storeFile'])
            storePassword keystorePropertiesRelease['storePassword']
        }
    }


    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debugConfig
        }
        release {
            minifyEnabled true
            zipAlignEnabled true
            debuggable false
            jniDebuggable false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }

    flavorDimensions 'default'
    productFlavors {
        dev {
            dimension = 'default'
            applicationIdSuffix = '.dev'
        }
        production {
            dimension = 'default'
        }
        qat {
            dimension = 'default'
            applicationIdSuffix = '.qat'
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation deps.support.app_compat
    implementation deps.support.design
    implementation deps.support.core_ktx
    implementation deps.kotlin.stdlib
    implementation deps.constraint_layout
    implementation deps.support.recyclerview
    implementation deps.support.swiperefreshlayout
    //Lifecycle
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    kapt deps.lifecycle.compiler
    implementation deps.lifecycle.runtime
    implementation deps.lifecycle.viewmodel_ktx
    implementation deps.lifecycle.livedata_ktx
    //navigation
    implementation deps.navigation.fragment_ktx
    implementation deps.navigation.ui_ktx
    //Retrofit
    implementation deps.retrofit.runtime
    implementation deps.retrofit.gson
    implementation deps.okhttp.okhttp
    implementation deps.okhttp.okhttp_logging_interceptor
    //Paging
    implementation deps.paging.ktx
    //Security
    implementation deps.security
    //Room Database
    kapt deps.room.compiler
    implementation deps.room.runtime
    implementation deps.room.ktx
    //Glide
    implementation deps.glide.runtime

}
